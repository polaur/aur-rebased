# Maintainer: Piotr Gorski <lucjan.lucjanov@gmail.com>
# Contributor: Lukas Fleischer <lfleischer@archlinux.org>
# Contributor: Hilton Medeiros <medeiros.hilton@gmail.com>
# Contributor: Dave Reisner <d@falconindy.com>

pkgname=libgit2-git
_pkgname=libgit2
pkgver=1.9.0.r108.gdbc19dc08
pkgrel=1
epoch=1
pkgdesc='A linkable library for Git'
arch=('x86_64')
url='https://libgit2.github.com/'
depends=('glibc' 'llhttp' 'openssl' 'pcre' 'zlib')
makedepends=('cmake' 'libssh2' 'python' 'git')
provides=('libgit2' 'libgit2.so')
conflicts=('libgit2')
license=(LicenseRef-GPL-2.0-only-with-linking-exception)
source=("git+https://github.com/libgit2/libgit2")
sha256sums=('SKIP')

pkgver() {
  cd "$_pkgname"
  git describe --long --tags | sed 's/v//;s/\([^-]*-g\)/r\1/;s/-/./g'
}

build() {
  local cmake_options=(
    -B build
    -D CMAKE_BUILD_TYPE=None
    -D CMAKE_INSTALL_PREFIX=/usr
    -D REGEX_BACKEND=pcre2
    -D USE_HTTP_PARSER=llhttp
    -D USE_SSH=ON
    -S $_pkgname
    -W no-dev
  )
  cmake "${cmake_options[@]}"
  cmake --build build --verbose
}

check() {
  local ignored_tests=(
    'auth_clone|'
    'invasive|'
    'online|'
    'network_url_parse__hostname_implied_root_empty_port|'
    'network_url_parse__hostname_empty_port|'
    'network_url_parse__ipv4_implied_root_empty_port|'
    'network_url_parse__ipv4_empty_port|'
    'network_url_parse__ipv6_implied_root_empty_port|'
    'network_url_parse__ipv6_empty_port|'
    'proxy|'
    'proxy_auto_not_detected|'
    'ssh'
  )
  local ifs="$IFS"
  IFS=
  # NOTE: disable tests requiring the internet, relying on non-existent
  # resources, or those that are only compatible with the (modified) vendored
  # version of http-parser, but not with upstream http-parser
  ctest --test-dir build --output-on-failure -E "${ignored_tests[*]}"
  IFS="$ifs"
}

package() {
  depends+=('libssh2.so')
  DESTDIR="$pkgdir" cmake --install build
  install -vDm 644 $_pkgname/{AUTHORS,README.md} -t "$pkgdir/usr/share/doc/$pkgname/"
  install -vDm 644 $_pkgname/COPYING -t "$pkgdir/usr/share/licenses/$pkgname/"
}
